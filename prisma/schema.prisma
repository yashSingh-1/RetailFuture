// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TypesOfCustomer {
  AffilateUser
  SalesMan
}

model User {
  id String @id @unique @default(cuid())
  name String 
  typeOfCustomer TypesOfCustomer?
  userIdClerk String @unique
  email String @unique
  image String?

  Product Product[]
  Review Review[]
  IfSomeBodyBoughtHisReviewedProduct BoughtAddress[]
} 

model Product {
  id String @id @unique @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [userIdClerk])
  title String
  price String
  commissionRate String
  image String
  description String
  reviews Review[]
  BoughtBy BoughtAddress[]
}

model Review {
  id String @id @unique @default(cuid())
  parentProductId String
  ParentProduct Product @relation(fields: [parentProductId], references: [id])
  UserReviewerId String
  ReviewedUser User @relation(fields: [UserReviewerId], references: [id])
  ReviewStory String
  NameOfReviewer String
  StarsAwarded Int
}

model BoughtAddress {
  id String @id @unique @default(cuid())
  ProductBought String
  ProductRelation Product @relation(fields: [ProductBought], references: [id])
  UserWhichGeneratedTheAffilaitedLink String
  UserRelation User @relation(fields: [UserWhichGeneratedTheAffilaitedLink], references: [id])
  FlatOrHouse String
  City String
  Country String
  PinCode String
  PhoneNum String
  Email String
}